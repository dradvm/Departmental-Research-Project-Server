
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AnswerScalarFieldEnum = {
  idQuestion: 'idQuestion',
  idAnswer: 'idAnswer',
  idUser: 'idUser',
  contentAnswer: 'contentAnswer'
};

exports.Prisma.CartScalarFieldEnum = {
  idUser: 'idUser',
  idCourse: 'idCourse'
};

exports.Prisma.CategoryScalarFieldEnum = {
  idCategory: 'idCategory',
  nameCategory: 'nameCategory'
};

exports.Prisma.CertificateScalarFieldEnum = {
  idCourse: 'idCourse',
  certificate: 'certificate'
};

exports.Prisma.CouponScalarFieldEnum = {
  idCoupon: 'idCoupon',
  type: 'type',
  value: 'value',
  startDate: 'startDate',
  endDate: 'endDate',
  quantity: 'quantity',
  appliedAmount: 'appliedAmount',
  minRequire: 'minRequire',
  maxValueDiscount: 'maxValueDiscount',
  code: 'code',
  idUser: 'idUser'
};

exports.Prisma.CouponCourseScalarFieldEnum = {
  idCoupon: 'idCoupon',
  idCourse: 'idCourse'
};

exports.Prisma.CourseScalarFieldEnum = {
  idCourse: 'idCourse',
  idUser: 'idUser',
  title: 'title',
  subTitle: 'subTitle',
  description: 'description',
  price: 'price',
  isPublic: 'isPublic',
  isAccepted: 'isAccepted',
  thumbnail: 'thumbnail',
  requirement: 'requirement',
  targetAudience: 'targetAudience'
};

exports.Prisma.CourseCategoryScalarFieldEnum = {
  idCourse: 'idCourse',
  idCategory: 'idCategory'
};

exports.Prisma.CourseObjectiveScalarFieldEnum = {
  idCourse: 'idCourse',
  idCourseObjective: 'idCourseObjective',
  content: 'content'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  idUser: 'idUser',
  idCourse: 'idCourse',
  dateRegister: 'dateRegister',
  finishStatus: 'finishStatus',
  progress: 'progress'
};

exports.Prisma.FollowScalarFieldEnum = {
  idFollower: 'idFollower',
  idFollowing: 'idFollowing'
};

exports.Prisma.LectureScalarFieldEnum = {
  idCourse: 'idCourse',
  idSection: 'idSection',
  idLecture: 'idLecture',
  nameLecture: 'nameLecture',
  isDone: 'isDone'
};

exports.Prisma.MessageScalarFieldEnum = {
  idMessage: 'idMessage',
  idUserSender: 'idUserSender',
  idUserReceiver: 'idUserReceiver',
  message: 'message',
  timeSend: 'timeSend'
};

exports.Prisma.NoteScalarFieldEnum = {
  idNote: 'idNote',
  timeNote: 'timeNote',
  note: 'note',
  idUser: 'idUser',
  idCourse: 'idCourse',
  idSection: 'idSection',
  idLecture: 'idLecture'
};

exports.Prisma.NotificationScalarFieldEnum = {
  idNotification: 'idNotification',
  contentNotification: 'contentNotification',
  idUser: 'idUser'
};

exports.Prisma.NotificationReceiverScalarFieldEnum = {
  idNotification: 'idNotification',
  idUser: 'idUser',
  timeGetNotification: 'timeGetNotification'
};

exports.Prisma.PaymentScalarFieldEnum = {
  idPayment: 'idPayment',
  timePayment: 'timePayment',
  totalPrice: 'totalPrice',
  idUser: 'idUser'
};

exports.Prisma.PaymentDetailScalarFieldEnum = {
  idPayment: 'idPayment',
  idCourse: 'idCourse',
  price: 'price'
};

exports.Prisma.QuestionScalarFieldEnum = {
  idQuestion: 'idQuestion',
  idUser: 'idUser',
  idCourse: 'idCourse',
  idSection: 'idSection',
  idLecture: 'idLecture',
  contentQuestion: 'contentQuestion'
};

exports.Prisma.ReportScalarFieldEnum = {
  idReport: 'idReport',
  idUser: 'idUser',
  contentReport: 'contentReport'
};

exports.Prisma.ReviewScalarFieldEnum = {
  idReview: 'idReview',
  idUser: 'idUser',
  idCourse: 'idCourse',
  rating: 'rating',
  review: 'review'
};

exports.Prisma.SectionScalarFieldEnum = {
  idCourse: 'idCourse',
  idSection: 'idSection',
  nameSection: 'nameSection'
};

exports.Prisma.StudyRemindScalarFieldEnum = {
  idStudyRemind: 'idStudyRemind',
  idUser: 'idUser',
  idCourse: 'idCourse',
  timeRemind: 'timeRemind',
  typeRemind: 'typeRemind'
};

exports.Prisma.UserScalarFieldEnum = {
  idUser: 'idUser',
  name: 'name',
  biography: 'biography',
  role: 'role',
  gender: 'gender',
  birthday: 'birthday',
  codeExpired: 'codeExpired',
  codeId: 'codeId',
  email: 'email',
  password: 'password'
};

exports.Prisma.UserCertificateScalarFieldEnum = {
  idCourse: 'idCourse',
  idUser: 'idUser'
};

exports.Prisma.UserCouponScalarFieldEnum = {
  idUser: 'idUser',
  idCoupon: 'idCoupon'
};

exports.Prisma.WishlistScalarFieldEnum = {
  idUser: 'idUser',
  idCourse: 'idCourse'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AnswerOrderByRelevanceFieldEnum = {
  contentAnswer: 'contentAnswer'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  nameCategory: 'nameCategory'
};

exports.Prisma.CertificateOrderByRelevanceFieldEnum = {
  certificate: 'certificate'
};

exports.Prisma.CouponOrderByRelevanceFieldEnum = {
  type: 'type',
  code: 'code'
};

exports.Prisma.CourseOrderByRelevanceFieldEnum = {
  title: 'title',
  subTitle: 'subTitle',
  description: 'description',
  thumbnail: 'thumbnail',
  requirement: 'requirement',
  targetAudience: 'targetAudience'
};

exports.Prisma.CourseObjectiveOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.LectureOrderByRelevanceFieldEnum = {
  nameLecture: 'nameLecture'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  message: 'message'
};

exports.Prisma.NoteOrderByRelevanceFieldEnum = {
  note: 'note'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  contentNotification: 'contentNotification'
};

exports.Prisma.QuestionOrderByRelevanceFieldEnum = {
  contentQuestion: 'contentQuestion'
};

exports.Prisma.ReportOrderByRelevanceFieldEnum = {
  contentReport: 'contentReport'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  review: 'review'
};

exports.Prisma.SectionOrderByRelevanceFieldEnum = {
  nameSection: 'nameSection'
};

exports.Prisma.StudyRemindOrderByRelevanceFieldEnum = {
  typeRemind: 'typeRemind'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  biography: 'biography',
  role: 'role',
  gender: 'gender',
  codeExpired: 'codeExpired',
  codeId: 'codeId',
  email: 'email',
  password: 'password'
};


exports.Prisma.ModelName = {
  Answer: 'Answer',
  Cart: 'Cart',
  Category: 'Category',
  Certificate: 'Certificate',
  Coupon: 'Coupon',
  CouponCourse: 'CouponCourse',
  Course: 'Course',
  CourseCategory: 'CourseCategory',
  CourseObjective: 'CourseObjective',
  Enrollment: 'Enrollment',
  Follow: 'Follow',
  Lecture: 'Lecture',
  Message: 'Message',
  Note: 'Note',
  Notification: 'Notification',
  NotificationReceiver: 'NotificationReceiver',
  Payment: 'Payment',
  PaymentDetail: 'PaymentDetail',
  Question: 'Question',
  Report: 'Report',
  Review: 'Review',
  Section: 'Section',
  StudyRemind: 'StudyRemind',
  User: 'User',
  UserCertificate: 'UserCertificate',
  UserCoupon: 'UserCoupon',
  Wishlist: 'Wishlist'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
